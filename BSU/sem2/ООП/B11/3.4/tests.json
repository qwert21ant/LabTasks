{
	"tests": [
		{
			"group": "Basic operators",
			"tests": [
				{
					"group": "Clear Value",
					"tests": [
						{
							"test": "0",
							"expected": "0"
						},
						{
							"test": "5",
							"expected": "5"
						},
						{
							"test": "123456",
							"expected": "123456"
						},
						{
							"test": "true",
							"expected": "true"
						},
						{
							"test": "false",
							"expected": "false"
						}
					]
				},
				{
					"group": "LogicNOT",
					"tests": [
						{
							"test": "!3",
							"expected": "false"
						},
						{
							"test": "!0",
							"expected": "true"
						},
						{
							"test": "!true",
							"expected": "false"
						},
						{
							"test": "!false",
							"expected": "true"
						}
					]
				},
				{
					"group": "Single Braces",
					"tests": [
						{
							"test": "(3)",
							"expected": "3"
						},
						{
							"test": "(true)",
							"expected": "true"
						},
						{
							"test": "(false)",
							"expected": "false"
						}
					]
				},
				{
					"group": "Comparison operators",
					"tests": [
						{
							"test": "1 < 2",
							"expected": "true"
						},
						{
							"test": "13 > 44",
							"expected": "false"
						},
						{
							"test": "98 <= 98",
							"expected": "true"
						},
						{
							"test": "98 >= 99",
							"expected": "false"
						},
						{
							"test": "1000 == 1000",
							"expected": "true"
						},
						{
							"test": "827 != 888",
							"expected": "true"
						},
						{
							"test": "true != false",
							"expected": "true"
						},
						{
							"test": "true >= false",
							"expected": "true"
						}
					]
				},
				{
					"group": "Logic AND, OR",
					"tests": [
						{
							"test": "1 && 2",
							"expected": "true"
						},
						{
							"test": "0 || 2",
							"expected": "true"
						},
						{
							"test": "0 || 0",
							"expected": "false"
						},
						{
							"test": "98 && 0",
							"expected": "false"
						},
						{
							"test": "0 && 0",
							"expected": "false"
						},
						{
							"test": "true || false",
							"expected": "true"
						},
						{
							"test": "true && false",
							"expected": "false"
						}
					]
				}
			]
		},
		{
			"group": "Combination",
			"tests": [
				{
					"group": "W/o braces and unary operators",
					"tests": [
						{
							"test": "3 > 2 == true",
							"expected": "true"
						},
						{
							"test": "3 == 2 == 1",
							"expected": "false"
						},
						{
							"test": "3 != 2 == 1",
							"expected": "true"
						},
						{
							"test": "3 <= 2 >= 0",
							"expected": "true"
						},
						{
							"test": "1 == 1 != 1 == 1 != 1",
							"expected": "true"
						},
						{
							"test": "5 > 4 > 3 > 2 > 1 > 0 == 0",
							"expected": "true"
						}
					]
				},
				{
					"group": "With unary operators",
					"tests": [
						{
							"test": "!!!!!!!!5142",
							"expected": "true"
						},
						{
							"test": "!3 > !2 == !true",
							"expected": "true"
						},
						{
							"test": "!3 == !2 == !1 == !0",
							"expected": "false"
						},
						{
							"test": "!3 != !2 == !false",
							"expected": "false"
						},
						{
							"test": "3 <= !2 >= 0",
							"expected": "true"
						},
						{
							"test": "!1 == 1 != !1 == 1 != !1",
							"expected": "false"
						},
						{
							"test": "5 >= !4 > 3 >= !2 >= 1 >= !0 == !0",
							"expected": "true"
						}
					]
				},
				{
					"group": "With braces and unary operators",
					"tests": [
						{
							"test": "!3 > (!2 == !true)",
							"expected": "false"
						},
						{
							"test": "!!3 == ((!2 == !1) == !0)",
							"expected": "true"
						},
						{
							"test": "(((!3))) != ((!2 != !false))",
							"expected": "true"
						},
						{
							"test": "3 <= (!2 >= 0)",
							"expected": "false"
						},
						{
							"test": "!2 == ((!2 != !2) != (2 != !2))",
							"expected": "false"
						}
					]
				}
			]
		},
		{
			"group": "Priority test",
			"tests": [
				{
					"test": "3 && 7 <= 5 || 0",
					"expected": "false"
				},
				{
					"test": "1 || 2 && 3 >= 4 == 5",
					"expected": "true"
				},
				{
					"test": "1 != 2 > 4 == 4 && 1 == 0",
					"expected": "false"
				},
				{
					"test": "1 > 2 == 3 > 4",
					"expected": "true"
				}
			]
		},
		{
			"group": "Incorrect expressions",
			"tests": [
				{
					"group": "Braces",
					"tests": [
						{
							"test": "",
							"expected": "error"
						},
						{
							"test": "(",
							"expected": "error"
						},
						{
							"test": ")",
							"expected": "error"
						},
						{
							"test": "()",
							"expected": "error"
						},
						{
							"test": "((((((((2)))))))",
							"expected": "error"
						},
						{
							"test": "(1 > 2) || 3)",
							"expected": "error"
						},
						{
							"test": "(((1)) > ((3)) == (3)",
							"expected": "error"
						}
					]
				},
				{
					"group": "Incorrect operators",
					"tests": [
						{
							"test": "3 = 3",
							"expected": "error"
						},
						{
							"test": "4 => 3",
							"expected": "error"
						},
						{
							"test": "true <=< 4",
							"expected": "error"
						},
						{
							"test": "3 ! 3",
							"expected": "error"
						},
						{
							"test": "4 ? 2 : false",
							"expected": "error"
						}
					]
				},
				{
					"group": "Incorrect literals",
					"tests": [
						{
							"test": "3.0",
							"expected": "error"
						},
						{
							"test": "-34e-5",
							"expected": "error"
						},
						{
							"test": "TrUe",
							"expected": "error"
						},
						{
							"test": "flse",
							"expected": "error"
						},
						{
							"test": "(1 == 2 || 3. > 3.000003) || False",
							"expected": "error"
						},
						{
							"test": "a > b == c",
							"expected": "error"
						},
						{
							"test": "0b0001 && 0b0100",
							"expected": "error"
						},
						{
							"test": "0xabcd >= 0xBBBd",
							"expected": "error"
						},
						{
							"test": "abracadabra >= bebrabebra",
							"expected": "error"
						}
					]
				},
				{
					"group": "Missed parts",
					"tests": [
						{
							"test": "== 3",
							"expected": "error"
						},
						{
							"test": "5 >",
							"expected": "error"
						},
						{
							"test": "======",
							"expected": "error"
						},
						{
							"test": "3 >= ! == 4",
							"expected": "error"
						},
						{
							"test": "!==!0==!0",
							"expected": "error"
						},
						{
							"test": "1&&||5&&||4&&||2&&",
							"expected": "error"
						},
						{
							"test": "!(!)",
							"expected": "error"
						},
						{
							"test": "<()>",
							"expected": "error"
						},
						{
							"test": "!",
							"expected": "error"
						},
						{
							"test": "3 2 1",
							"expected": "error"
						},
						{
							"test": "3 !true !3",
							"expected": "error"
						}
					]
				}
			]
		},
		{
			"group": "Whitespaces",
			"tests": [
				{
					"test": "             3            ",
					"expected": "3"
				},
				{
					"test": "	33	>					   123456	    ||    	 	(			2   >  3     	)	     ",
					"expected": "false"
				},
				{
					"test": " 		(   (((   ( (( !! !! ! !!! ! !! !!! ! !!!! ! !! 3 ) )) )  ) ) )",
					"expected": "true"
				},
				{
					"test": "               ",
					"expected": "error"
				}
			]
		}
	]
}